#include <iostream>

using namespace std;


#include <cassert>
struct S {
    char c;  // 1 byte value
             // 3 bytes padding (assuming alignof(float) == 4)
    float f; // 4 bytes value (assuming sizeof(float) == 4)
    bool operator==(const S& arg) const { // value-based equality
        return c == arg.c && f == arg.f;
    }
};

void f() {
    assert(sizeof(S) == 8);
    std::cout << "The size of S is 8 bytes\n";
    S s1 = {'a', 3.14};
    S s2 = s1;
    reinterpret_cast<unsigned char*>(&s1)[2] = 'b'; // change 2nd byte of padding
    assert(s1 == s2); // value did not change
    std::cout << "It's value did not change\n";
}


int main()
{
    f();
    cout<<"Hey Grrrrl, join STEM. Do it for the Doge!\n";

    return 0;
}
